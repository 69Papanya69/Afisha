version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn --chdir myAfisha --bind 0.0.0.0:8000 myAfisha.wsgi:application
    volumes:
      - .:/app
      - static_volume:/app/myAfisha/staticfiles
      - media_volume:/app/myAfisha/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - SECRET_KEY=dev_secret_key
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A myAfisha worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - SECRET_KEY=dev_secret_key
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
      - web
    restart: unless-stopped

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A myAfisha beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - SECRET_KEY=dev_secret_key
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
      - web
      - celery_worker
    restart: unless-stopped

  flower:  # Опционально: UI для мониторинга Celery
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A myAfisha flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DEBUG=1
      - SECRET_KEY=dev_secret_key
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
      - celery_worker
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  redis_data: 